{"name":"Constantinople","body":"Constantinople\r\n==============\r\n\r\nUsage\r\n=====\r\nPlace all your configuration parameters in YAML files within a config/\r\ndirectory under the top level of your project. For example, you might have a\r\nconfig/database.yml file.\r\n\r\nIn an initializer at the top level of your project,\r\nor within your config/ directory, do this:\r\n\r\n    require 'constantinople'\r\n\r\nYou may then use CONSTANTINOPLE from anywhere in your app:\r\n\r\n    CONSTANTINOPLE.database.username\r\n\r\n\r\nDefaults and Overrides\r\n======================\r\nYou can create default and over-ride versions of config files. Constantinople\r\nwill look for and load config files in the following order:\r\n\r\n    config/*.yml.default\r\n    config/*.yml\r\n    config/*.yml.override\r\n\r\nThe results are merged together. We recommended you gitignore config/*.yml.\r\n\r\nEnvironments\r\n============\r\nIf there is a non-empty ENV['RAILS_ENV'], ENV['RACK_ENV'] or ENV['APP_ENV'] the\r\nfirst such environment will be used as a key whose values will be merged into\r\nthe level above. If none of those are defined, 'development' is used.\r\nSo for example, if your database.yml file has\r\n\r\n    username: root\r\n    password:\r\n    production:\r\n      password: d87gfds09ds8a\r\n\r\nThen in your development environment:\r\n\r\n    CONSTANTINOPLE.database.username # root\r\n    CONSTANTINOPLE.database.password # nil\r\n\r\nAnd in your production environment:\r\n\r\n    CONSTANTINOPLE.database.username # root\r\n    CONSTANTINOPLE.database.password # d87gfds09ds8a\r\n\r\n\r\nWorking on the Gem\r\n==================\r\nInstall rvm, including ruby 1.9.\r\nClone the git repo, then...\r\n\r\n    cd constantinople\r\n    gem install bundler\r\n    bundle install\r\n    rake coverage\r\n\r\n\r\nForking\r\n=======\r\nYeah, fine. But please rename to Istanbul.","tagline":"Load all your config YAML files","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}